{"version":3,"sources":["src/pages/User/Login/index.tsx"],"sourcesContent":["import { Footer } from \"@/components\";\nimport {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MobileOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from \"@ant-design/icons\";\nimport {\n  LoginForm,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from \"@ant-design/pro-components\";\nimport {\n  FormattedMessage,\n  Helmet,\n  history,\n  SelectLang,\n  useIntl,\n  useModel,\n} from \"@umijs/max\";\nimport { Alert, message, Tabs } from \"antd\";\nimport { createStyles } from \"antd-style\";\nimport React, { useState } from \"react\";\nimport { flushSync } from \"react-dom\";\nimport Settings from \"../../../../config/defaultSettings\";\nimport { sign_in } from \"@/services/sign-in\";\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    action: {\n      marginLeft: \"8px\",\n      color: \"rgba(0, 0, 0, 0.2)\",\n      fontSize: \"24px\",\n      verticalAlign: \"middle\",\n      cursor: \"pointer\",\n      transition: \"color 0.3s\",\n      \"&:hover\": {\n        color: token.colorPrimaryActive,\n      },\n    },\n    lang: {\n      width: 42,\n      height: 42,\n      lineHeight: \"42px\",\n      position: \"fixed\",\n      right: 16,\n      borderRadius: token.borderRadius,\n      \":hover\": {\n        backgroundColor: token.colorBgTextHover,\n      },\n    },\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\",\n      overflow: \"auto\",\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: \"100% 100%\",\n    },\n  };\n});\n\nconst LoginMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst Login: React.FC = () => {\n  const [userLoginState, setUserLoginState] =\n    useState<API.DefaultObjectResponse<API.Staff>>();\n  const [type, setType] = useState<string>(\"account\");\n  const { initialState, setInitialState } = useModel(\"@@initialState\");\n  const { styles } = useStyles();\n  const intl = useIntl();\n\n  const fetchUserInfo = async (values: any) => {\n    const userInfo = (await sign_in(values)).data;\n    // if (userInfo) {\n    //   console.log(\"userInfo\", userInfo);\n    //   setInitialState((s) => ({\n    //     ...s,\n    //     currentUser: { id: userInfo.id, token: userInfo.token },\n    //   }));\n    // }\n    return userInfo;\n  };\n\n  const handleSubmit = async (values: API.SignInData) => {\n    try {\n      // 登录\n      console.log(\"handleSubmit\");\n      await fetchUserInfo(values);\n      const msg = await sign_in(values);\n      console.log(\"msg\", msg);\n      if (msg) {\n        const defaultLoginSuccessMessage = intl.formatMessage({\n          id: \"pages.login.success\",\n          defaultMessage: \"登录成功！\",\n        });\n        message.success(defaultLoginSuccessMessage);\n        const urlParams = new URL(window.location.href).searchParams;\n        localStorage.setItem(\"account\", values.account);\n        localStorage.setItem(\"password\", values.password);\n        localStorage.setItem(\"token\", msg.data.token);\n        localStorage.setItem(\"id\", msg.data.id);\n\n        history.push(\"/org\");\n\n        return;\n      }\n      console.log(msg);\n      // 如果失败去设置用户错误信息\n    } catch (error) {\n      const defaultLoginFailureMessage = intl.formatMessage({\n        id: \"pages.login.failure\",\n        defaultMessage: \"登录失败，请重试！\",\n      });\n      console.log(error);\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div\n        style={{\n          flex: \"1\",\n          padding: \"32px 0\",\n        }}\n      >\n        <LoginForm\n          contentStyle={{\n            minWidth: 280,\n            maxWidth: \"75vw\",\n          }}\n          title=\"Vend admin\"\n          subTitle={\"The best vend platform of the word\"}\n          initialValues={{\n            autoLogin: true,\n          }}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.SignInData);\n          }}\n        >\n          <Tabs\n            activeKey={type}\n            onChange={setType}\n            centered\n            items={[\n              {\n                key: \"account\",\n                label: intl.formatMessage({\n                  id: \"pages.login.accountLogin.tab\",\n                  defaultMessage: \"Account Login \",\n                }),\n              },\n            ]}\n          />\n\n          <>\n            <ProFormText\n              name=\"account\"\n              fieldProps={{\n                size: \"large\",\n                prefix: <UserOutlined />,\n              }}\n              placeholder={intl.formatMessage({\n                id: \"pages.login.username.placeholder\",\n                defaultMessage: \"account\",\n              })}\n              rules={[\n                {\n                  required: true,\n                  message: (\n                    <FormattedMessage\n                      id=\"pages.login.username.required\"\n                      defaultMessage=\"Account is required\"\n                    />\n                  ),\n                },\n              ]}\n            />\n            <ProFormText.Password\n              name=\"password\"\n              fieldProps={{\n                size: \"large\",\n                prefix: <LockOutlined />,\n              }}\n              placeholder={intl.formatMessage({\n                id: \"pages.login.password.placeholder\",\n                defaultMessage: \"password\",\n              })}\n              rules={[\n                {\n                  required: true,\n                  message: (\n                    <FormattedMessage\n                      id=\"pages.login.password.required\"\n                      defaultMessage=\"Please input password\"\n                    />\n                  ),\n                },\n              ]}\n            />\n          </>\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":[],"mappings":"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"}