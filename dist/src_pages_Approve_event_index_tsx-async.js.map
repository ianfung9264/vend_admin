{"version":3,"sources":["src/pages/Approve/event/columns.tsx","src/pages/Approve/event/index.tsx"],"sourcesContent":["import { StrictVerifyButton } from \"@/components/Base/StrictVerifyButton\";\nimport { EventStatus, EventType } from \"@/services/commonType\";\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StopOutlined,\n} from \"@ant-design/icons\";\nimport { ProColumns, ProFormList } from \"@ant-design/pro-components\";\nimport { Button, Tooltip } from \"antd\";\nimport { StrictMode } from \"react\";\nimport { readonly } from \"vue\";\n\nexport function EventTableColumns({\n  mainTableReload,\n  // setSchedule,\n}: {\n  mainTableReload: (() => Promise<void>) | undefined;\n  // setSchedule: (schedule: API_EVENT.EventSchedule[]) => void;\n}): ProColumns<API_EVENT.Event>[] {\n  return [\n    {\n      title: \"Event Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      align: \"center\",\n      ellipsis: true,\n      copyable: true,\n    },\n    {\n      title: \"Creator id\",\n      dataIndex: \"creator\",\n      key: \"creator\",\n      align: \"center\",\n      ellipsis: true,\n      copyable: true,\n    },\n    {\n      title: \"Participants count\",\n      dataIndex: \"participants\",\n      key: \"participants\",\n      render: (text) => ((text as any) ? (text as any).length : 0),\n      align: \"center\",\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\",\n      render: (text) => `$${Number(text).toFixed(2)}`, // 格式化为货币\n      align: \"center\",\n    },\n    {\n      title: \"Liked Count\",\n      dataIndex: \"liked_count\",\n      key: \"liked_count\",\n      align: \"center\",\n    },\n    {\n      title: \"Location\",\n      dataIndex: \"location\",\n      key: \"location\",\n      render: (_, record: API_EVENT.Event) =>\n        `${record.location.city}, ${record.location.state}, ${record.location.country}`, // 格式化位置\n      align: \"center\",\n    },\n    {\n      title: \"Event Type\",\n      dataIndex: \"type\",\n      key: \"event_type\",\n      filters: [\n        { text: \"Multi-day\", value: EventType.MULTI },\n        { text: \"Single-day\", value: EventType.SINGLE },\n        { text: \"Recurring\", value: EventType.RECURRING },\n      ],\n      onFilter: (value, record) => record.type === value, // 过滤逻辑\n      valueEnum: {\n        [EventType.MULTI]: { text: \"Multi-day\", color: \"blue\" },\n        [EventType.SINGLE]: { text: \"Single-day\", color: \"cyan\" },\n        [EventType.RECURRING]: { text: \"Recurring\", color: \"purple\" },\n      },\n      align: \"center\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filters: [\n        { text: \"Normal\", value: EventStatus.NORMAL },\n        { text: \"Cancel\", value: EventStatus.CANCEL },\n        { text: \"Suspend\", value: EventStatus.SUSPEND },\n      ],\n      onFilter: (value, record) => record.status === value, // 过滤逻辑\n      valueEnum: {\n        [EventStatus.NORMAL]: { text: \"Normal\", status: \"Success\" },\n        [EventStatus.CANCEL]: { text: \"Cancel\", status: \"Error\" },\n        [EventStatus.SUSPEND]: { text: \"Suspend\", status: \"Warning\" },\n      },\n      align: \"center\",\n    },\n    // {\n    //   title: \"schedule\",\n    //   dataIndex: \"schedule\",\n    //   key: \"schedule\",\n    //   align: \"center\",\n    //   render: (_, record) => {\n    //     console.log(\"record.schedule\", record.schedule);\n    //     return <ProFormList name=\"schedule\" dataSource={record.schedule} />;\n    //   },\n    //   // `${record.schedule.start_date} - ${record.schedule.end_date}`,\n    // },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n      key: \"action\",\n      render: (_, record) => {\n        const schedule = record.schedule;\n        const latestScheduleItem = schedule.reduce((latest, current) => {\n          return new Date(current.start_time) > new Date(latest.end_time)\n            ? current\n            : latest;\n        });\n\n        // 获取当前时间\n        const now = new Date();\n\n        // 比较最晚的时间与当前时间\n        const canCancelOrStop =\n          latestScheduleItem && new Date(latestScheduleItem.start_time) > now;\n        return (\n          <span className=\"flex flex-row gap-2 justify-center\">\n            <StrictVerifyButton\n              title={\n                record.status == EventStatus.NORMAL\n                  ? \"Are you sure you want to stop the event?\"\n                  : \"Are you sure you want to start the event?\"\n              }\n              trigger={\n                <Button\n                  disabled={!canCancelOrStop}\n                  type=\"primary\"\n                  size=\"small\"\n                  icon={\n                    record.status == EventStatus.NORMAL ? (\n                      <Tooltip title=\"Click to stop the event\">\n                        <PauseOutlined />\n                      </Tooltip>\n                    ) : (\n                      <Tooltip title=\"Click to stop the event\">\n                        <PlayCircleOutlined />\n                      </Tooltip>\n                    )\n                  }\n                ></Button>\n              }\n              initData={{\n                actionFuncParams: { id: record._id },\n                actionFunc: async () => {},\n              }}\n            />\n            <StrictVerifyButton\n              title={\"Are you sure you want to cancel the event?\"}\n              trigger={\n                <Button\n                  size=\"small\"\n                  type=\"primary\"\n                  icon={<StopOutlined />}\n                  disabled={\n                    record.status == EventStatus.CANCEL || !canCancelOrStop\n                  }\n                />\n              }\n              initData={{\n                actionFuncParams: { id: record._id },\n                actionFunc: async () => {},\n              }}\n            />\n\n            {/* <DetailModal initData={record} mainTableReload={mainTableReload} /> */}\n          </span>\n        );\n      },\n      align: \"center\",\n    },\n  ];\n}\n\nexport function EventScheduleTableColumns({\n  mainTableReload,\n}: {\n  mainTableReload: (() => Promise<void>) | undefined;\n}): ProColumns<API_EVENT.Event>[] {\n  return [\n    {\n      title: \"Event Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      align: \"center\",\n      ellipsis: true,\n      copyable: true,\n    },\n    {\n      title: \"Creator id\",\n      dataIndex: \"creator\",\n      key: \"creator\",\n      align: \"center\",\n      ellipsis: true,\n      copyable: true,\n    },\n  ];\n}\n","import BaseIndex from \"@/components/Base/BaseIndex\";\nimport BaseSearch from \"@/components/Base/BaseSearch\";\nimport BaseTable from \"@/components/Base/BaseTable\";\nimport { _getAllOrg } from \"@/services/org/info\";\nimport { ActionType, ProCard } from \"@ant-design/pro-components\";\nimport { useRequest } from \"@umijs/max\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Helper from \"@/util/searchHelper\";\nimport { Badge, Calendar, Card, message } from \"antd\";\nimport { _getAllEvent } from \"@/services/event/info\";\nimport { EventTableColumns } from \"./columns\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\n\ndayjs.extend(utc); // 使用 UTC 插件\n\nexport default function Index() {\n  /**********************************狀態管理**********************************/\n  const { data, error, loading } = useRequest(_getAllEvent);\n\n  const actionRef = useRef<ActionType>();\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [reload, setReload] = useState(() => actionRef.current?.reload);\n  const [currentEventSchedule, setCurrentEventSchedule] = useState<\n    API_EVENT.EventSchedule[]\n  >([]);\n  const [currentEventName, setCurrentEventName] = useState<string>(\"\");\n  useEffect(() => {\n    setReload(() => actionRef.current?.reload);\n  }, []);\n  const [currentRowId, setCurrentRowId] = useState<string | null>(null); // 存储当前被点击的行 ID\n\n  /**********************************狀態管理**********************************/\n  /**********************************組件初始化**********************************/\n\n  /**********************************組件初始化**********************************/\n  /**********************************異步函數**********************************/\n\n  /**********************************異步函數**********************************/\n  return (\n    <div>\n      <BaseIndex title=\"Approve Event page\">\n        <BaseSearch\n          title=\"Search bar\"\n          submitFun={actionRef.current?.reload}\n          inputProps={{\n            value: searchKey,\n            onChange: ({ currentTarget: { value } }) => setSearchKey(value),\n          }}\n        />\n        <BaseTable<API_EVENT.Event>\n          searchKey={searchKey}\n          props={{\n            headerTitle: \"Event List\",\n            actionRef: actionRef,\n\n            columns: EventTableColumns({\n              mainTableReload: reload,\n            }),\n            request: async () => {\n              const dataSource = await _getAllEvent().then(({ data }) => {\n                console.log(\"data\", data);\n                setCurrentEventSchedule(data[0].schedule);\n                setCurrentEventName(data[0].name);\n                setCurrentRowId(data[0]._id);\n                return {\n                  success: true,\n                  data: data,\n                };\n              });\n              if (searchKey) {\n                dataSource.data = Helper<API_EVENT.Event[]>({\n                  dataSource: dataSource.data,\n                  keyWord: searchKey,\n                }) as API_EVENT.Event[];\n\n                return dataSource;\n              } else {\n                return dataSource;\n              }\n            },\n          }}\n        />\n      </BaseIndex>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}