{"version":3,"sources":["src/pages/Setting/faq/columns.tsx","src/pages/Setting/faq/detailModal.tsx","src/pages/Setting/faq/index.tsx","src/services/setting/faq.ts"],"sourcesContent":["import { ProColumns } from \"@ant-design/pro-components\";\nimport { Button, Divider, Tooltip } from \"antd\";\nimport { LandownerAdvancedStatus, OtpStatusType } from \"@/services/commonType\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport DetailModal from \"./detailModal\";\n\nexport function QuestionTableColumns({\n  mainTableReload,\n}: {\n  mainTableReload: (() => Promise<void>) | undefined;\n}): ProColumns<any>[] {\n  // console.log(\"mainTableReload\", mainTableReload);\n  // const [tableReload, setTableReload] = useState(() => mainTableReload);\n\n  // useEffect(() => {\n  //   setTableReload(() => mainTableReload);\n  // }, [mainTableReload]);\n  return [\n    {\n      title: \"Question\",\n      dataIndex: \"question\",\n      key: \"landowner\",\n      align: \"center\",\n    },\n    {\n      title: \"Answer\",\n      dataIndex: \"answer\",\n      key: \"answer\",\n      align: \"center\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isDisplay\",\n      key: \"isDisplay\",\n      align: \"center\",\n      valueEnum: {\n        true: { text: \"Show\", key: \"true\" },\n        false: { text: \"Hidden\", key: \"false\" },\n      },\n    },\n    {\n      title: \"_id\",\n      dataIndex: \"event_idCount\",\n      key: \"_id\",\n      align: \"center\",\n      hidden: true,\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n      key: \"action\",\n      render: (_, record) => (\n        <span>\n          <DetailModal initData={record} mainTableReload={mainTableReload} />\n        </span>\n      ),\n      align: \"center\",\n    },\n  ];\n}\n","import BaseModel from \"@/components/Base/BaseModel\";\nimport { _getOrgById } from \"@/services/org/info\";\nimport {\n  ProForm,\n  ProFormField,\n  ProFormGroup,\n  ProFormInstance,\n  ProFormRate,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n  ProTable,\n} from \"@ant-design/pro-components\";\nimport { Divider, Image, message, Progress } from \"antd\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"@ant-design/charts\";\nimport { _postFaq, _updateFaq } from \"@/services/setting/faq\";\nimport { values } from \"lodash\";\n\nexport default function DetailModal({\n  initData,\n  mainTableReload,\n}: {\n  mainTableReload: (() => Promise<void>) | undefined;\n\n  initData?: API_Setting.UpdateFaq;\n}) {\n  /**********************************狀態管理**********************************/\n  // const formRef = useRef<ProFormInstance>();\n  const [formRef, setFormRef] = useState<ProFormInstance>();\n  useEffect(() => {\n    console.log(\"formRef\", formRef);\n  }, [initData]);\n  /**********************************狀態管理**********************************/\n  /**********************************組件初始化**********************************/\n  const groupStyle: React.CSSProperties = {\n    backgroundColor: \"white\",\n    paddingLeft: \"24px\",\n    paddingRight: \"24px\",\n    paddingTop: \"6px\",\n    borderBottom: 3,\n    borderColor: \"black\",\n  };\n  /**********************************組件初始化**********************************/\n  /**********************************異步函數**********************************/\n  // const fetchOrgData = async (id: string) => {\n  //   try {\n  //     const res = await _getOrgById(id);\n  //     console.log(\"res.data\", res.data);\n  //     setOrg(res.data);\n  //     formRef.current?.setFieldsValue(res.data);\n  //   } catch (error) {\n  //     console.error(\"获取组织数据失败:\", error);\n  //   }\n  // };\n  /**********************************異步函數**********************************/\n  return (\n    <BaseModel<API_Setting.UpdateFaq>\n      submit={formRef?.submit}\n      allowUpdate={true}\n      title=\"Faq Details\"\n      modalFormProps={{\n        initialValues: { initData },\n        style: { minHeight: \"20vh\" },\n        clearOnDestroy: true,\n        onInit: async (values, form) => {\n          console.log(\"form\", form);\n          setFormRef(form);\n          form.setFieldsValue(initData);\n        },\n\n        onFinish: async (value) => {\n          console.log(\"value\", value);\n          if (initData) {\n            value._id = initData?._id;\n            if (value.isDisplay) {\n              value.isDisplay = JSON.parse(value.isDisplay as any);\n            }\n            try {\n              await _updateFaq(value);\n              message.success(\"Create faq success\");\n            } catch (error) {\n              message.error(\"Create faq failed\");\n            } finally {\n              mainTableReload?.();\n              return true;\n            }\n          }\n        },\n      }}\n    >\n      <ProForm.Group style={{ ...groupStyle }}>\n        <ProFormTextArea\n          label={\"Question\"}\n          name=\"question\"\n          colProps={{ span: 8, offset: 0 }}\n        />\n\n        <ProFormSelect\n          label=\"IsDisplay\"\n          name={\"isDisplay\"}\n          fieldProps={{\n            defaultValue: initData?.isDisplay,\n          }}\n          options={[\n            {\n              label: \"Show\",\n              value: \"true\",\n            },\n            {\n              label: \"Hidden\",\n              value: \"false\",\n            },\n          ]}\n          colProps={{ span: 8, offset: 6 }}\n        />\n        <ProFormTextArea\n          label={\"Answer\"}\n          name=\"answer\"\n          colProps={{ span: 8, offset: 0 }}\n        />\n      </ProForm.Group>\n    </BaseModel>\n  );\n}\n","import BaseIndex from \"@/components/Base/BaseIndex\";\nimport BaseSearch from \"@/components/Base/BaseSearch\";\nimport BaseTable from \"@/components/Base/BaseTable\";\nimport { _getAllOrg } from \"@/services/org/info\";\nimport { ActionType, ProFormText } from \"@ant-design/pro-components\";\nimport { useRequest } from \"@umijs/max\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Helper from \"@/util/searchHelper\";\nimport { Button, message } from \"antd\";\nimport { LandownerAdvancedStatus } from \"@/services/commonType\";\nimport { _getAllWaitingAdvancedOrg } from \"@/services/org/advanced\";\nimport { _getAlWithdrawal } from \"@/services/withdrawal/info\";\nimport { QuestionTableColumns } from \"./columns\";\nimport { _getAllFaq, _postFaq } from \"@/services/setting/faq\";\nimport BaseModel from \"@/components/Base/BaseModel\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nexport default function Index() {\n  /**********************************狀態管理**********************************/\n\n  const actionRef = useRef<ActionType>();\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [reload, setReload] = useState(() => actionRef.current?.reload);\n  const [allOrgData, setAllOrgData] = useState<any[]>([]);\n  useEffect(() => {\n    setReload(() => actionRef.current?.reload);\n  }, []);\n\n  /**********************************狀態管理**********************************/\n  /**********************************組件初始化**********************************/\n  /**********************************組件初始化**********************************/\n  /**********************************異步函數**********************************/\n\n  /**********************************異步函數**********************************/\n  return (\n    <div>\n      <BaseIndex title=\"FAQ page\">\n        <BaseSearch\n          title=\"Search bar\"\n          submitFun={actionRef.current?.reload}\n          inputProps={{\n            value: searchKey,\n            onChange: ({ currentTarget: { value } }) => setSearchKey(value),\n          }}\n        />\n        <BaseTable<any>\n          searchKey={searchKey}\n          props={{\n            headerTitle: \"Withdrawal approval List\",\n            actionRef: actionRef,\n            optionsRender(props, defaultDom) {\n              const createFaq = (\n                <BaseModel<API_Setting.CreateFaq>\n                  allowUpdate={false}\n                  readOnly={false}\n                  modalFormProps={{\n                    onFinish: async (value) => {\n                      try {\n                        await _postFaq(value);\n                        message.success(\"Create faq success\");\n                      } catch (error) {\n                        message.error(\"Create faq failed\");\n                      } finally {\n                        actionRef.current?.reload();\n                        return true;\n                      }\n                    },\n                    grid: true,\n                    trigger: (\n                      <Button icon={<PlusSquareOutlined />} type=\"text\" />\n                    ),\n                    submitter: {\n                      searchConfig: {\n                        resetText: \"reset\",\n                        submitText: \"confirm\",\n                      },\n                    },\n                  }}\n                  title=\"New faq\"\n                >\n                  <ProFormText\n                    colProps={{ span: 18 }}\n                    label=\"Question\"\n                    name=\"question\"\n                  />\n                  <ProFormText\n                    colProps={{ span: 18 }}\n                    label=\"Answer\"\n                    name=\"answer\"\n                  />\n                </BaseModel>\n              );\n              return [createFaq, ...defaultDom];\n            },\n            columns: QuestionTableColumns({\n              mainTableReload: reload,\n            }),\n            request: async () => {\n              const dataSource = await _getAllFaq().then(({ data }) => {\n                return {\n                  success: true,\n                  data: data,\n                };\n              });\n              if (searchKey) {\n                dataSource.data = Helper<Page_org.mainTable>({\n                  dataSource: dataSource.data,\n                  keyWord: searchKey,\n                }) as Page_org.mainTable[];\n\n                return dataSource;\n              } else {\n                return dataSource;\n              }\n            },\n          }}\n        />\n      </BaseIndex>\n    </div>\n  );\n}\n","import { request } from \"@umijs/max\";\n\nexport const _getAllFaq = async (): Promise<API.DefaultListResponse> => {\n  return request(\"/api/v1/admin/private/faq/all\", {\n    method: \"get\",\n  });\n};\n\nexport const _postFaq = async (\n  data: API_Setting.CreateFaq\n): Promise<API.DefaultObjectResponse> => {\n  return request(\"/api/v1/admin/private/faq\", {\n    method: \"post\",\n    data,\n  });\n};\nexport const _updateFaq = async (\n  data: API_Setting.UpdateFaq\n): Promise<API.DefaultObjectResponse> => {\n  return request(\"/api/v1/admin/private/faq\", {\n    method: \"put\",\n    data,\n  });\n};\n"],"names":[],"mappings":"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"}