{"version":3,"sources":["src_pages_Approve_event_index_tsx-async.9081361495722452102.hot-update.js","src/pages/Approve/event/index.tsx"],"sourcesContent":["globalThis.makoModuleHotUpdate(\n  'src/pages/Approve/event/index.tsx',\n  {\n    modules: {},\n  },\n  function (runtime) {\n    runtime._h='11500546192095603543';;\n  },\n);\n","import BaseIndex from \"@/components/Base/BaseIndex\";\nimport BaseSearch from \"@/components/Base/BaseSearch\";\nimport BaseTable from \"@/components/Base/BaseTable\";\nimport { _getAllOrg } from \"@/services/org/info\";\nimport { ActionType, ProCard } from \"@ant-design/pro-components\";\nimport { useRequest } from \"@umijs/max\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Helper from \"@/util/searchHelper\";\nimport { Badge, Calendar, Card, message } from \"antd\";\nimport { _getAllEvent } from \"@/services/event/info\";\nimport { EventTableColumns } from \"./columns\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\n\ndayjs.extend(utc); // 使用 UTC 插件\n\nexport default function Index() {\n  /**********************************狀態管理**********************************/\n  const { data, error, loading } = useRequest(_getAllEvent);\n\n  const actionRef = useRef<ActionType>();\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [reload, setReload] = useState(() => actionRef.current?.reload);\n  const [currentEventSchedule, setCurrentEventSchedule] = useState<\n    API_EVENT.EventSchedule[]\n  >([]);\n  const [currentEventName, setCurrentEventName] = useState<string>(\"\");\n  useEffect(() => {\n    setReload(() => actionRef.current?.reload);\n  }, []);\n  const [currentRowId, setCurrentRowId] = useState<string | null>(null); // 存储当前被点击的行 ID\n\n  /**********************************狀態管理**********************************/\n  /**********************************組件初始化**********************************/\n\n  /**********************************組件初始化**********************************/\n  /**********************************異步函數**********************************/\n\n  /**********************************異步函數**********************************/\n  return (\n    <div>\n      <BaseIndex title=\"Event page\">\n        <BaseSearch\n          title=\"Search bar\"\n          submitFun={actionRef.current?.reload}\n          inputProps={{\n            value: searchKey,\n            onChange: ({ currentTarget: { value } }) => setSearchKey(value),\n          }}\n        />\n        <BaseTable<API_EVENT.Event>\n          searchKey={searchKey}\n          props={{\n            headerTitle: \"Event List\",\n            actionRef: actionRef,\n            onRow: (record) => {\n              return {\n                onClick: () => {\n                  setCurrentEventSchedule(record.schedule);\n                  setCurrentEventName(record.name);\n                  setCurrentRowId(record._id);\n                },\n              };\n            },\n            rowKey: \"_id\",\n            rowClassName: (record) =>\n              record._id === currentRowId\n                ? \"bg-gradient-to-r from-cyan-300 to-cyan-100\"\n                : \"\", // 根据当前行 ID 设置样式\n\n            columns: EventTableColumns({\n              mainTableReload: reload,\n            }),\n            request: async () => {\n              const dataSource = await _getAllEvent().then(({ data }) => {\n                console.log(\"data\", data);\n                setCurrentEventSchedule(data[0].schedule);\n                setCurrentEventName(data[0].name);\n                setCurrentRowId(data[0]._id);\n                return {\n                  success: true,\n                  data: data,\n                };\n              });\n              if (searchKey) {\n                dataSource.data = Helper<API_EVENT.Event[]>({\n                  dataSource: dataSource.data,\n                  keyWord: searchKey,\n                }) as API_EVENT.Event[];\n\n                return dataSource;\n              } else {\n                return dataSource;\n              }\n            },\n          }}\n        />\n      </BaseIndex>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,WAAW,mBAAmB,CAC5B,qCACA;IACE,SAAS;;;;;;wCCab;;;2BAAwB;;;;;;;uFAhBF;wFACC;uFACD;wCAGK;oFACwB;0FAChC;yCAEU;4CACK;mFACL;iFACb;;;;;;;;;;YAEhB,cAAK,CAAC,MAAM,CAAC,YAAG,GAAG,YAAY;YAEhB,SAAS;oBA4BH;;gBA3BnB,wEAAwE,GACxE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAA,eAAU,EAAC,kBAAY;gBAExD,MAAM,YAAY,IAAA,aAAM;gBACxB,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,eAAQ,EAAC;gBAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,eAAQ,EAAC;wBAAM;4BAAA,qBAAA,UAAU,OAAO,cAAjB,yCAAA,mBAAmB,MAAM;;gBACpE,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,IAAA,eAAQ,EAE9D,EAAE;gBACJ,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,eAAQ,EAAS;gBACjE,IAAA,gBAAS,EAAC;oBACR,UAAU;4BAAM;gCAAA,qBAAA,UAAU,OAAO,cAAjB,yCAAA,mBAAmB,MAAM;;gBAC3C,GAAG,EAAE;gBACL,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,eAAQ,EAAgB,OAAO,eAAe;gBAEtF,wEAAwE,GACxE,yEAAyE,GAEzE,yEAAyE,GACzE,wEAAwE,GAExE,wEAAwE,GACxE,qBACE,2BAAC;8BACC,cAAA,2BAAC,kBAAS;wBAAC,OAAM;;0CACf,2BAAC,mBAAU;gCACT,OAAM;gCACN,SAAS,GAAE,qBAAA,UAAU,OAAO,cAAjB,yCAAA,mBAAmB,MAAM;gCACpC,YAAY;oCACV,OAAO;oCACP,UAAU,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,GAAK,aAAa;gCAC3D;;;;;;0CAEF,2BAAC,kBAAS;gCACR,WAAW;gCACX,OAAO;oCACL,aAAa;oCACb,WAAW;oCACX,OAAO,CAAC;wCACN,OAAO;4CACL,SAAS;gDACP,wBAAwB,OAAO,QAAQ;gDACvC,oBAAoB,OAAO,IAAI;gDAC/B,gBAAgB,OAAO,GAAG;4CAC5B;wCACF;oCACF;oCACA,QAAQ;oCACR,cAAc,CAAC,SACb,OAAO,GAAG,KAAK,eACX,+CACA;oCAEN,SAAS,IAAA,0BAAiB,EAAC;wCACzB,iBAAiB;oCACnB;oCACA,SAAS;wCACP,MAAM,aAAa,MAAM,IAAA,kBAAY,IAAG,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE;4CACpD,QAAQ,GAAG,CAAC,QAAQ;4CACpB,wBAAwB,IAAI,CAAC,EAAE,CAAC,QAAQ;4CACxC,oBAAoB,IAAI,CAAC,EAAE,CAAC,IAAI;4CAChC,gBAAgB,IAAI,CAAC,EAAE,CAAC,GAAG;4CAC3B,OAAO;gDACL,SAAS;gDACT,MAAM;4CACR;wCACF;wCACA,IAAI,WAAW;4CACb,WAAW,IAAI,GAAG,IAAA,qBAAM,EAAoB;gDAC1C,YAAY,WAAW,IAAI;gDAC3B,SAAS;4CACX;4CAEA,OAAO;wCACT,OACE,OAAO;oCAEX;gCACF;;;;;;;;;;;;;;;;;YAKV;eApFwB;;oBAEW,eAAU;;;iBAFrB;;;;;;;;;;;;;;;;;;;;;;;;;IDbV;AACZ,GACA,SAAU,OAAO;IACf,QAAQ,EAAE,GAAC;;AACb"}