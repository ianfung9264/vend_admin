{"version":3,"sources":["src/pages/Approve/withdraw/columns.tsx","src/pages/Approve/withdraw/detailModal.tsx","src/pages/Approve/withdraw/index.tsx","src/services/withdrawal/info.ts"],"sourcesContent":["import { ProColumns } from \"@ant-design/pro-components\";\nimport { Button, Divider, Tooltip } from \"antd\";\nimport DetailModal from \"./detailModal\";\nimport { LandownerAdvancedStatus, OtpStatusType } from \"@/services/commonType\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\n\nexport function WithdrawalTableColumns({\n  mainTableReload,\n}: {\n  mainTableReload: (() => Promise<void>) | undefined;\n}): ProColumns<any>[] {\n  // console.log(\"mainTableReload\", mainTableReload);\n  // const [tableReload, setTableReload] = useState(() => mainTableReload);\n\n  // useEffect(() => {\n  //   setTableReload(() => mainTableReload);\n  // }, [mainTableReload]);\n  return [\n    {\n      title: \"Landowner email\",\n      dataIndex: \"landowner\",\n      key: \"landowner\",\n      render: (_, record) => {\n        return record.landowner.email;\n      },\n      align: \"center\",\n    },\n    {\n      title: \"Landowner wallet\",\n      dataIndex: \"landowner\",\n      key: \"landowner\",\n      render: (_, record) => {\n        return record.landowner.wallet;\n      },\n      align: \"center\",\n    },\n    {\n      title: \"Withdrawal Amount\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      align: \"center\",\n    },\n    {\n      title: \"Currency\",\n      dataIndex: \"currency\",\n      key: \"currency\",\n      align: \"center\",\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"progress\",\n      key: \"progress\",\n      align: \"center\",\n    },\n    {\n      title: \"Rejected Reason\",\n      dataIndex: \"rejected_reason\",\n      key: \"wallet\",\n      align: \"center\",\n    },\n    {\n      title: \"_id\",\n      dataIndex: \"event_idCount\",\n      key: \"_id\",\n      align: \"center\",\n      hidden: true,\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n      key: \"action\",\n      render: (_, record) => (\n        <span>\n          <DetailModal initData={record} mainTableReload={mainTableReload} />\n        </span>\n      ),\n      align: \"center\",\n    },\n  ];\n}\n","import BaseModel from \"@/components/Base/BaseModel\";\nimport { _getOrgById } from \"@/services/org/info\";\nimport {\n  ProForm,\n  ProFormField,\n  ProFormGroup,\n  ProFormInstance,\n  ProFormRate,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n  ProTable,\n} from \"@ant-design/pro-components\";\nimport { Divider, Image, message, Popconfirm, Progress } from \"antd\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"@ant-design/charts\";\nimport { useModel } from \"@umijs/max\";\nimport {\n  _passOrgAdvanceApprove,\n  _rejectOrgAdvanceApprove,\n} from \"@/services/org/advanced\";\nimport {\n  WithdrawalProgress,\n  WithdrawalProgressNoRejected,\n} from \"@/services/commonType\";\nimport {\n  _rejectWithdrawal,\n  _updateWithdrawalProgress,\n} from \"@/services/withdrawal/info\";\n\nexport default function DetailModal({\n  initData,\n  mainTableReload,\n}: {\n  mainTableReload: (() => Promise<void>) | undefined;\n\n  initData?: any;\n}) {\n  /**********************************狀態管理**********************************/\n  const formRef = useRef<ProFormInstance>();\n\n  const leftFile = { span: 8, offset: 0 };\n  const rightFile = { span: 8, offset: 6 };\n  /**********************************狀態管理**********************************/\n  /**********************************組件初始化**********************************/\n  const groupStyle: React.CSSProperties = {\n    backgroundColor: \"white\",\n    paddingLeft: \"24px\",\n    paddingRight: \"24px\",\n    paddingTop: \"6px\",\n    borderBottom: 3,\n    borderColor: \"black\",\n  };\n  /**********************************組件初始化**********************************/\n  /**********************************異步函數**********************************/\n  // const fetchOrgData = async (id: string) => {\n  //   try {\n  //     const res = await _getOrgById(id);\n  //     console.log(\"res.data\", res.data);\n  //     setOrg(res.data);\n  //     formRef.current?.setFieldsValue(res.data);\n  //   } catch (error) {\n  //     console.error(\"获取组织数据失败:\", error);\n  //   }\n  // };\n  /**********************************異步函數**********************************/\n  return (\n    <BaseModel\n      modalFormProps={{\n        submitter: {\n          searchConfig: {\n            resetText: \"Reject\",\n            submitText: \"Confirm\",\n          },\n          resetButtonProps: {\n            preventDefault: true,\n          },\n          render: (_, dom) => {\n            const restButton = dom[0];\n            const newRestButton = (\n              <>\n                <BaseModel\n                  allowUpdate={false}\n                  readOnly={false}\n                  title=\"Confirmation reject\"\n                  modalFormProps={{\n                    onFinish: async (values) => {\n                      // console.log(\"values\", values);\n                      try {\n                        await _rejectWithdrawal({\n                          withdrawalId: initData._id,\n                          reason: values.reason,\n                        });\n                        message.success(\"Reject success\");\n                      } catch (error) {\n                        message.error(\"Reject failed\" + error);\n                      } finally {\n                        await mainTableReload?.();\n                        return true;\n                      }\n                    },\n                    width: \"650px\",\n                    submitter: {\n                      searchConfig: {\n                        submitText: \"Yes\",\n                        resetText: \"No\",\n                      },\n                    },\n                    trigger: restButton,\n                  }}\n                >\n                  <Divider\n                    children=\"Reason\"\n                    orientation=\"left\"\n                    orientationMargin={20}\n                  />\n                  <ProFormTextArea\n                    required={true}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please enter the reason for rejection\",\n                      },\n                    ]}\n                    fieldProps={{\n                      placeholder: \"Please enter the reason for rejection\",\n                    }}\n                    name=\"reason\"\n                    colProps={{ span: 18 }}\n                  />\n                </BaseModel>\n              </>\n            );\n            return [newRestButton, dom[1]];\n          },\n        },\n        formRef: { ...formRef },\n        clearOnDestroy: true,\n        onFinish: async (values) => {\n          console.log(\"values\", values);\n          if (!values.progress) {\n            return true;\n          }\n          if (initData) {\n            try {\n              await _updateWithdrawalProgress({\n                withdrawalId: initData._id,\n                progress: values.progress,\n              });\n              message.success(\"Update success\");\n            } catch (error) {\n              message.error(\"Update failed\");\n            } finally {\n              await mainTableReload?.();\n              return true;\n            }\n          }\n        },\n      }}\n      allowUpdate={false}\n      readOnly={false}\n      // initData={org}\n\n      title=\"Approve withdrawal\"\n    >\n      <ProForm.Group style={groupStyle}>\n        <ProFormSelect\n          label=\"Chose withdrawal status\"\n          name=\"progress\"\n          colProps={leftFile}\n          options={[\n            {\n              label: \"Progressing\",\n              value: WithdrawalProgress.APPROVED_PROGRESSING,\n            },\n            {\n              label: \"Waiting\",\n              value: WithdrawalProgress.WAITING_FOR_APPROVE,\n            },\n            {\n              label: \"Approve\",\n              value: WithdrawalProgress.APPROVED_COMPLETED,\n            },\n          ]}\n        />\n      </ProForm.Group>\n    </BaseModel>\n  );\n}\n","import BaseIndex from \"@/components/Base/BaseIndex\";\nimport BaseSearch from \"@/components/Base/BaseSearch\";\nimport BaseTable from \"@/components/Base/BaseTable\";\nimport { _getAllOrg } from \"@/services/org/info\";\nimport { ActionType } from \"@ant-design/pro-components\";\nimport { useRequest } from \"@umijs/max\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { WithdrawalTableColumns } from \"./columns\";\nimport Helper from \"@/util/searchHelper\";\nimport { message } from \"antd\";\nimport { LandownerAdvancedStatus } from \"@/services/commonType\";\nimport { _getAllWaitingAdvancedOrg } from \"@/services/org/advanced\";\nimport { _getAlWithdrawal } from \"@/services/withdrawal/info\";\nexport default function Index() {\n  /**********************************狀態管理**********************************/\n\n  const actionRef = useRef<ActionType>();\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [reload, setReload] = useState(() => actionRef.current?.reload);\n  const [allOrgData, setAllOrgData] = useState<any[]>([]);\n  useEffect(() => {\n    setReload(() => actionRef.current?.reload);\n  }, []);\n\n  /**********************************狀態管理**********************************/\n  /**********************************組件初始化**********************************/\n  /**********************************組件初始化**********************************/\n  /**********************************異步函數**********************************/\n\n  /**********************************異步函數**********************************/\n  return (\n    <div>\n      <BaseIndex title=\"Org withdrawal approval page\">\n        <BaseSearch\n          title=\"Search bar\"\n          submitFun={actionRef.current?.reload}\n          inputProps={{\n            value: searchKey,\n            onChange: ({ currentTarget: { value } }) => setSearchKey(value),\n          }}\n        />\n        <BaseTable<Page_org.mainTable>\n          searchKey={searchKey}\n          props={{\n            headerTitle: \"Withdrawal approval List\",\n            actionRef: actionRef,\n\n            columns: WithdrawalTableColumns({\n              mainTableReload: reload,\n            }),\n            request: async () => {\n              const dataSource = await _getAlWithdrawal().then((data) => {\n                console.log(\"withdrawal data: \", data);\n                return {\n                  success: true,\n                  data: data,\n                };\n              });\n              if (searchKey) {\n                dataSource.data = Helper<Page_org.mainTable>({\n                  dataSource: dataSource.data,\n                  keyWord: searchKey,\n                }) as Page_org.mainTable[];\n\n                return dataSource;\n              } else {\n                return dataSource;\n              }\n            },\n          }}\n        />\n      </BaseIndex>\n    </div>\n  );\n}\n","import { request } from \"@umijs/max\";\nimport { WithdrawalProgress } from \"../commonType\";\nexport const _getAlWithdrawal = async (): Promise<any[]> => {\n  return request(\" /api/v1/admin/private/withdrawal/all\", {\n    method: \"get\",\n  });\n};\nexport const _rejectWithdrawal = async (data: {\n  reason: string;\n  withdrawalId: string;\n}): Promise<API.DefaultObjectResponse> => {\n  return request(`/api/v1/admin/private/withdrawal/${data.withdrawalId}`, {\n    method: \"put\",\n    data: {\n      rejected_reason: data.reason,\n      progress: WithdrawalProgress.REJECTED,\n    },\n  });\n};\n\nexport const _updateWithdrawalProgress = async (data: {\n  withdrawalId: string;\n  progress: WithdrawalProgress;\n}): Promise<API.DefaultObjectResponse> => {\n  console.log(\"data\", data);\n  return request(`/api/v1/admin/private/withdrawal/${data.withdrawalId}`, {\n    method: \"put\",\n    data: { progress: data.progress },\n  });\n};\n"],"names":[],"mappings":"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"}