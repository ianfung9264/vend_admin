{"version":3,"sources":["src/pages/Transaction/fee/index.tsx"],"sourcesContent":["import BaseIndex from \"@/components/Base/BaseIndex\";\nimport BaseModel from \"@/components/Base/BaseModel\";\nimport BaseSearch from \"@/components/Base/BaseSearch\";\nimport BaseTable from \"@/components/Base/BaseTable\";\nimport { _getAllTransactionFee } from \"@/services/setting/fee\";\nimport {\n  _createCategory,\n  _getBannerVideo,\n  _getCategory,\n  _getPrivacyPolicy,\n  _getTermsCondition,\n  _postPrivacyPolicy,\n  _postTermsCondition,\n  _putPrivacyPolicy,\n  _putTermsCondition,\n  _updateBannerVideo,\n  _updateCategory,\n} from \"@/services/setting/others\";\nimport Helper from \"@/util/searchHelper\";\nimport { Liquid, Pie } from \"@ant-design/charts\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport {\n  ActionType,\n  EditableFormInstance,\n  EditableProTable,\n  ProCard,\n  ProForm,\n  ProFormInstance,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n  StatisticCard,\n} from \"@ant-design/pro-components\";\nimport { useRequest } from \"@umijs/max\";\nimport { Button, FormInstance, message, Statistic } from \"antd\";\nimport { DataSourceItemType } from \"antd/es/auto-complete\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport React, { useEffect, useRef, useState } from \"react\";\nexport default function Index() {\n  /**********************************狀態管理**********************************/\n  const [tab, setTab] = useState(\"tab1\");\n  const { refresh: TransactionFeeDataRefresh } = useRequest(\n    _getAllTransactionFee,\n    {\n      onSuccess: (res) => {\n        console.log(\"res\", res);\n        setCommission(res.commission);\n        setApplicationFee(res.application_fee_list);\n      },\n    }\n  );\n\n  const actionRef = useRef<ActionType>();\n  const feeActionRef = useRef<ActionType>();\n\n  const [commission, setCommission] = useState<any[]>([]);\n  const [applicationFee, setApplicationFee] = useState<any[]>([]);\n\n  const [commissionSearchKey, setCommissionSearchKey] = useState(\"\");\n\n  const [transactionFeeSearchKey, setTransactionFeeSearchKey] = useState(\"\");\n  useEffect(() => {\n    TransactionFeeDataRefresh();\n  }, []);\n  /**********************************狀態管理**********************************/\n  /**********************************組件初始化**********************************/\n\n  const CommissionElement = () => {\n    return (\n      <div>\n        <BaseSearch\n          title=\"Search bar\"\n          submitFun={actionRef.current?.reload}\n          inputProps={{\n            value: commissionSearchKey,\n            onChange: ({ currentTarget: { value } }) =>\n              setCommissionSearchKey(value),\n          }}\n        />\n        <BaseTable<any>\n          searchKey={commissionSearchKey}\n          props={{\n            headerTitle: \"Commission List\",\n            actionRef: actionRef,\n            columns: [\n              {\n                key: \"id\",\n                title: \"Application Session Id\",\n                dataIndex: \"application_fee_session_id\",\n                width: \"10%\",\n                align: \"center\",\n                ellipsis: true,\n                copyable: true,\n              },\n              {\n                key: \"event_id\",\n                title: \"Event Id\",\n                dataIndex: \"event_id\",\n                align: \"center\",\n                copyable: true,\n                ellipsis: true,\n              },\n              {\n                title: \"Schedule \",\n                dataIndex: \"schedule\",\n                align: \"center\",\n                copyable: true,\n                ellipsis: true,\n                render: (text: any, record: any) => {\n                  const mockData = [\n                    {\n                      start_time: \"2024-10-28T00:30:00.000Z\",\n                      end_time: \"2024-10-28T12:55:00.000Z\",\n                    },\n                    {\n                      start_time: \"2024-10-28T00:30:00.000Z\",\n                      end_time: \"2024-10-28T12:55:00.000Z\",\n                    },\n                  ];\n                  // 检查 schedule 是否存在并且是数组\n                  if (Array.isArray(record.schedule)) {\n                    return record.schedule.map((item: any, Index: number) => {\n                      const startTime = new Date(\n                        item.start_time\n                      ).toLocaleString(); // 格式化开始时间\n                      const endTime = new Date(item.end_time).toLocaleString(); // 格式化结束时间\n                      return (\n                        <>\n                          {Index + 1} : {startTime.toString()} -\n                          {endTime.toString()}\n                          <br></br>\n                        </>\n                      ); // 返回格式化的字符串\n                    });\n                  }\n                  return \"\"; // 如果没有 schedule，返回空字符串\n                },\n              },\n              {\n                title: \"Commission\",\n                dataIndex: \"commission\",\n                key: \"commission\",\n                align: \"center\",\n                render: (text: any, record: any) => {\n                  return record.stall_payment_summary.vendpopups_commission\n                    .total_amount;\n                },\n              },\n              {\n                title: \"Commission percentage\",\n                dataIndex: \"commission\",\n                key: \"commission\",\n                align: \"center\",\n                valueType: \"percent\",\n                render: (text: any, record: any) => {\n                  return (\n                    record.stall_payment_summary.vendpopups_commission\n                      .percentage + \"%\"\n                  );\n                },\n              },\n              {\n                title: \"Created At\",\n                dataIndex: \"createdAt\",\n                align: \"center\",\n                valueType: \"dateTime\",\n              },\n            ],\n            request: async () => {\n              const dataSource = await TransactionFeeDataRefresh().then(\n                (res) => {\n                  return {\n                    success: true,\n                    data: res.commission,\n                  };\n                }\n              );\n              if (commissionSearchKey) {\n                dataSource.data = Helper<Page_org.mainTable>({\n                  dataSource: dataSource.data,\n                  keyWord: commissionSearchKey,\n                }) as Page_org.mainTable[];\n                console.log(\"dataSource\", dataSource);\n                return dataSource;\n              } else {\n                return dataSource;\n              }\n            },\n          }}\n        />\n      </div>\n    );\n  };\n  const TransactionFeeElement = () => {\n    return (\n      <div>\n        <BaseSearch\n          title=\"Search bar\"\n          submitFun={feeActionRef.current?.reload}\n          inputProps={{\n            value: transactionFeeSearchKey,\n            onChange: ({ currentTarget: { value } }) =>\n              setTransactionFeeSearchKey(value),\n          }}\n        />\n        <BaseTable<any>\n          searchKey={transactionFeeSearchKey}\n          props={{\n            headerTitle: \"Transaction fee List\",\n            actionRef: feeActionRef,\n            columns: [\n              {\n                key: \"id\",\n                title: \"Application Session Id\",\n                dataIndex: \"application_fee_session_id\",\n                width: \"10%\",\n                align: \"center\",\n                ellipsis: true,\n                copyable: true,\n              },\n              {\n                key: \"event_id\",\n                title: \"Event Id\",\n                dataIndex: \"event_id\",\n                align: \"center\",\n                copyable: true,\n                ellipsis: true,\n              },\n              {\n                key: \"amount\",\n                title: \"Amount\",\n                dataIndex: \"event_id\",\n                align: \"center\",\n                copyable: true,\n                ellipsis: true,\n                render: (text: any, record: any) => {\n                  return \"$2\";\n                },\n              },\n              {\n                title: \"Created At\",\n                dataIndex: \"createdAt\",\n                align: \"center\",\n                valueType: \"dateTime\",\n              },\n            ],\n            request: async () => {\n              const dataSource = await TransactionFeeDataRefresh().then(\n                (res) => {\n                  return {\n                    success: true,\n                    data: res.application_fee_list,\n                  };\n                }\n              );\n              if (transactionFeeSearchKey) {\n                dataSource.data = Helper<Page_org.mainTable>({\n                  dataSource: dataSource.data,\n                  keyWord: transactionFeeSearchKey,\n                }) as Page_org.mainTable[];\n                return dataSource;\n              } else {\n                return dataSource;\n              }\n            },\n          }}\n        />\n      </div>\n    );\n  };\n  const DashboardElement = () => {\n    const config = {\n      title: {\n        visible: true,\n        text: \"水波图\",\n      },\n      description: {\n        visible: true,\n        text: \"水波图 - 百分比显示\",\n      },\n      min: 0,\n      max: 10000,\n      value: 5639,\n      // statistic: {\n      //   formatter: (value) => ((100 * value) / 10000).toFixed(1) + \"%\",\n      // },\n    };\n    const totalVendpopupsCommission = commission.reduce((total, item) => {\n      // 确保 vendpopups_commission 存在并且有 total_amount 属性\n      if (\n        item.stall_payment_summary &&\n        item.stall_payment_summary.vendpopups_commission\n      ) {\n        return (\n          total + item.stall_payment_summary.vendpopups_commission.total_amount\n        );\n      }\n      return total; // 如果没有，返回当前总和\n    }, 0);\n    const applicationFeeTotalAmount = applicationFee.length * 2;\n\n    const totalAmount = applicationFeeTotalAmount + totalVendpopupsCommission;\n    return (\n      <ProCard\n        title=\"Dashboard\"\n        extra={dayjs().format(\"YYYY-MM-DD HH:mm\")}\n        split={\"horizontal\"}\n        // headerBordered\n        bordered\n      >\n        <ProCard split=\"horizontal\">\n          <ProCard split=\"horizontal\">\n            <ProCard split=\"vertical\">\n              <StatisticCard\n                statistic={{\n                  title: \"Application total quantity\",\n                  value: applicationFee.length,\n                }}\n              />\n              <StatisticCard\n                statistic={{\n                  title: \"Commission total quantity\",\n                  value: commission.length,\n                }}\n              />\n            </ProCard>\n            <ProCard split=\"vertical\">\n              <StatisticCard\n                statistic={{\n                  title: \"Application total amount\",\n                  value: applicationFeeTotalAmount,\n                  suffix: \"$\",\n                }}\n              />\n              <StatisticCard\n                statistic={{\n                  title: \"Commission total amount\",\n                  value: totalVendpopupsCommission,\n                  suffix: \"$\",\n                }}\n              />\n            </ProCard>\n          </ProCard>\n          <ProCard split=\"vertical\">\n            <StatisticCard\n              title=\"Application fee percentage\"\n              chart={\n                <Liquid\n                  height={400}\n                  width={400}\n                  label={{\n                    visible: true,\n                    formatter: (text: any) => {\n                      return (\n                        Number(\n                          (applicationFeeTotalAmount / totalAmount).toFixed(2)\n                        ) *\n                          100 +\n                        \"%\"\n                      );\n                    },\n                  }}\n                  percent={Number(\n                    (applicationFeeTotalAmount / totalAmount).toFixed(2)\n                  )}\n                />\n              }\n            />\n            <StatisticCard\n              title=\"Percentage summary\"\n              chart={\n                <Pie\n                  forceFit={true}\n                  radius={0.8}\n                  angleField=\"value\"\n                  colorField=\"label\"\n                  label={{\n                    visible: true,\n                    type: \"spider\",\n                  }}\n                  type={\"view\"}\n                  data={[\n                    {\n                      value:\n                        Number(\n                          (totalVendpopupsCommission / totalAmount).toFixed(2)\n                        ) * 100,\n                      label: \"Commission\",\n                    },\n                    {\n                      value:\n                        Number(\n                          (applicationFeeTotalAmount / totalAmount).toFixed(2)\n                        ) * 100,\n                      label: \"Application\",\n                    },\n                  ]}\n                />\n              }\n            />\n          </ProCard>\n        </ProCard>\n      </ProCard>\n    );\n  };\n  /**********************************組件初始化**********************************/\n  /**********************************異步函數**********************************/\n  /**********************************異步函數**********************************/\n  return (\n    <BaseIndex title=\"Commission & fee page\">\n      <ProCard\n        title=\"\"\n        headStyle={{ paddingBottom: 24 }}\n        style={{ minHeight: \"90vh\" }}\n        tabs={{\n          tabPosition: \"left\",\n          activeKey: tab,\n          items: [\n            {\n              label: `Dashboard`,\n              key: \"dashboard\",\n              children: DashboardElement(),\n            },\n            {\n              label: `Commission`,\n              key: \"tab1\",\n\n              children: CommissionElement(),\n            },\n            {\n              label: `Application fee`,\n              key: \"tab2\",\n              children: TransactionFeeElement(),\n            },\n          ],\n          onChange: (key) => {\n            setTab(key);\n          },\n        }}\n      />\n    </BaseIndex>\n  );\n}\n//\n"],"names":[],"mappings":"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"}